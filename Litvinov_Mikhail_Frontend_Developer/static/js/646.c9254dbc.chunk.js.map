{"version":3,"file":"static/js/646.c9254dbc.chunk.js","mappings":"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","sources":["routes/Gallery/Frame/Frame.styles.ts","routes/Gallery/Frame/Frame.tsx","routes/Gallery/Technologies/Technologies.styles.ts","routes/Gallery/Technologies/Technology/Technology.styles.ts","routes/Gallery/Technologies/Technology/Technology.tsx","routes/Gallery/Technologies/type.ts","routes/Gallery/Technologies/TechnologiesCards/TechnologiesCards.styles.ts","routes/Gallery/Technologies/TechnologiesCards/TechnologiesCards.tsx","components/MarqueeCards/MarqueeCards.tsx","routes/Gallery/Technologies/Technologies.tsx","routes/Gallery/Gallery.styles.ts","routes/Gallery/Experience/ListItem/ListItem.styles.ts","routes/Gallery/Experience/ListItem/ListItem.tsx","routes/Gallery/Experience/ExpandedListItem/ExpandedListItem.styles.ts","routes/Gallery/Experience/ExpandedListItem/ExpandedListItem.tsx","routes/Gallery/Experience/type.ts","routes/Gallery/Experience/Experience.styles.ts","routes/Gallery/Experience/Experience.tsx","routes/Gallery/Gallery.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Frame = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.75s cubic-bezier(0.75, 0.5, 0, 1), opacity 0.75s ease;\r\n  will-change: transform;\r\n  transform-style: preserve-3d;\r\n  &:nth-child(n + 4) {\r\n    background-color: rgb(0 0 0 / 0.87);\r\n  }\r\n  &:nth-child(2),\r\n  &:nth-child(4) {\r\n    background-color: rgb(0 0 0 / 1);\r\n  }\r\n`;\r\n","import { IFrameProps } from './type';\r\nimport * as S from './Frame.styles';\r\n\r\nexport const Frame = ({ children, name }: IFrameProps) => {\r\n  const combinedClassName = name ? `${name} frame`: \"frame\";\r\n  return <S.Frame className={combinedClassName}>{children}</S.Frame>;\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Technologies = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 3vh;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  padding: 5vh 0;\r\n  justify-content: center;\r\n  gap: 10vh;\r\n  width: 80vw;\r\n  flex-wrap: wrap;\r\n  border-inline: 1px solid #5733A8;\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  font-family: raleway_c;\r\n  font-weight: 100;\r\n  font-size: 4vh;\r\n  line-height: 1;\r\n`;\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2vh;\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  font-size: 2.5vh;\r\n  font-weight: 600;\r\n  color: white;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  font-size: 0.9vw;\r\n  padding: 1vh;\r\n  background-color: rgba(51, 51, 51, 0.5);\r\n  border-radius: 1vh;\r\n  border: 1px solid #fff;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  height: 2vw;\r\n`;\r\n\r\nexport const Technology = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 18vw;\r\n  height: 12vw;\r\n  background-color: #5733a8;\r\n  border: 2px solid white;\r\n  border-radius: 2vh;\r\n  padding: 1vw;\r\n  gap: 1vw;\r\n`;\r\n","import * as S from './Technology.styles';\r\nimport { ITechnologyProps } from '../type';\r\n\r\nexport const Technology = ({ icon, label, description }: ITechnologyProps) => {\r\n  return (\r\n    <S.Technology>\r\n      <S.Header>\r\n        <S.Icon src={icon} />\r\n        <S.Label>{label}</S.Label>\r\n      </S.Header>\r\n      <S.Text>{description}</S.Text>\r\n    </S.Technology>\r\n  );\r\n};\r\n","import JSIcon from '../../../assets/icons/js.png';\r\nimport ReactIcon from '../../../assets/icons/react.png';\r\nimport HTMLIcon from '../../../assets/icons/html.png';\r\nimport CSSIcon from '../../../assets/icons/css.png';\r\nimport TSIcon from '../../../assets/icons/typescript.png';\r\nimport NextJSIcon from '../../../assets/icons/nextjs.png';\r\nimport JestIcon from '../../../assets/icons/jest.png';\r\nimport GitIcon from '../../../assets/icons/git.png';\r\nimport JiraIcon from '../../../assets/icons/jira.png';\r\n\r\nexport interface ITechnologyProps {\r\n  icon: string;\r\n  label: string;\r\n  description: string;\r\n}\r\n\r\nexport const TechnologiesInformation: ITechnologyProps[] = [\r\n  {\r\n    icon: JSIcon,\r\n    label: 'JavaScript',\r\n    description:\r\n      'I have hands-on experience in utilizing JavaScript to imbue web pages with interactivity and functionality, thus crafting dynamic user interfaces that enhance the overall user experience.',\r\n  },\r\n  {\r\n    icon: ReactIcon,\r\n    label: 'React',\r\n    description:\r\n      'I have extensive experience with React, including its core principles. I can create reusable components and effectively manage application state using hooks and context.',\r\n  },\r\n  {\r\n    icon: HTMLIcon,\r\n    label: 'HTML',\r\n    description: 'I have experience using HTML to craft web page structures and develop semantic content that ensures accessibility for all users',\r\n  },\r\n  {\r\n    icon: CSSIcon,\r\n    label: 'CSS',\r\n    description: 'I am skilled in using CSS to style web pages and create visually appealing designs that enhance user experience.',\r\n  },\r\n  {\r\n    icon: TSIcon,\r\n    label: 'TypeScript',\r\n    description:\r\n      'I confidently work with TypeScript, leveraging it to enhance the reliability and scalability of JavaScript applications through static typing.',\r\n  },\r\n  {\r\n    icon: NextJSIcon,\r\n    label: 'Next.js',\r\n    description:\r\n      'I have practical experience in leveraging Next.js to build performant and SEO-friendly web applications, thanks to its streamlined development process and server-side rendering capabilities.',\r\n  },\r\n  {\r\n    icon: JestIcon,\r\n    label: 'Jest',\r\n    description:\r\n      'I am proficient in using Jest for writing and executing comprehensive unit tests, ensuring the reliability and stability of codebases across various projects.',\r\n  },\r\n  {\r\n    icon: GitIcon,\r\n    label: 'Git',\r\n    description:\r\n      'I am highly proficient in Git, efficiently managing code changes throughout development, collaborating seamlessly with teammates, and effectively resolving conflicts.',\r\n  },\r\n  {\r\n    icon: JiraIcon,\r\n    label: 'Jira',\r\n    description:\r\n      'I have experience utilizing Jira as a project management tool to facilitate collaboration, track progress, and prioritize tasks effectively within development teams.',\r\n  },\r\n];\r\n","import styled from 'styled-components';\r\n\r\nexport const CardsWrapper = styled.div`\r\n  display: flex;\r\n  gap: 10vw;\r\n  margin-left: 10vw;\r\n`;\r\n","import { Technology } from '../Technology/Technology';\r\nimport { TechnologiesInformation } from '../type';\r\n\r\nimport * as S from './TechnologiesCards.styles';\r\n\r\nconst TechnologiesCards: React.FC = () => {\r\n  return (\r\n    <S.CardsWrapper>\r\n      {TechnologiesInformation.map((technology) => (\r\n        <Technology icon={technology.icon} label={technology.label} description={technology.description}/>\r\n      ))}\r\n    </S.CardsWrapper>\r\n  );\r\n};\r\n\r\nexport default TechnologiesCards;\r\n","import Marquee from 'react-fast-marquee';\r\nimport { IMarqueeCardsProps } from './types';\r\n\r\nconst MarqueeCards: React.FC<IMarqueeCardsProps> = (props) => {\r\n  const { direction, children, speed } = props;\r\n  return (\r\n    <Marquee direction={direction} gradient={false} speed={speed} pauseOnHover={true}>\r\n      {children}\r\n    </Marquee>\r\n  );\r\n};\r\n\r\nexport default MarqueeCards;\r\n","import * as S from './Technologies.styles';\r\nimport TechnologiesCards from './TechnologiesCards/TechnologiesCards';\r\nimport MarqueeCards from '../../../components/MarqueeCards/MarqueeCards';\r\n\r\nexport const Technologies = () => {\r\n  return (\r\n    <S.Technologies>\r\n      <S.H3>Technologies and tools</S.H3>\r\n      <S.Content>\r\n        <MarqueeCards direction=\"left\" speed={50}>\r\n          <TechnologiesCards />\r\n        </MarqueeCards>\r\n        <MarqueeCards direction=\"right\" speed={50}>\r\n          <TechnologiesCards />\r\n        </MarqueeCards>\r\n      </S.Content>\r\n    </S.Technologies>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  gap: 2vw;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 4vh;\r\n  width: 20vh;\r\n  height: 6vh;\r\n  font-size: 2.1vh;\r\n  line-height: 2.1vh;\r\n  background-color: rgba(17, 11, 49, 0.7);\r\n  color: #fff;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  border-radius: 20%;\r\n  gap: 1vh;\r\n  border: 1px solid #3a4a97;\r\n  transition: all 0.3s;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: rgba(51, 24, 112, 0.7);\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 0 7px #7f4efb;\r\n  }\r\n`;\r\n\r\nexport const ProjectsIcon = styled.img`\r\n  height: 5vh;\r\n`;\r\nexport const ContactsIcon = styled.img`\r\n  height: 4vh;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 2000px;\r\n\r\n  @media (width >= 1920px) {\r\n    height: 2200px;\r\n  }\r\n\r\n  @media (width >= 3440px) {\r\n    height: 2650px;\r\n  }\r\n  @media (width >= 3840px) {\r\n    height: 3350px;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  perspective: 1500px;\r\n`;\r\n\r\nexport const Gallery = styled.section`\r\n  transform-style: preserve-3d;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  font-family: raleway_c;\r\n  font-weight: 100;\r\n  text-align: left;\r\n  font-size: 9vh;\r\n  line-height: 1.3;\r\n  width: min-content;\r\n  margin-right: 50vh;\r\n  padding: 64px;\r\n  background: linear-gradient(to bottom right, hsl(0, 0%, 50%) 0, hsl(0, 0%, 100%) 10%, hsl(0, 0%, 50%) 20%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  animation: shine 3s infinite linear;\r\n`;\r\n\r\nexport const H3 = styled.h3`\r\n  font-family: raleway_c;\r\n  font-weight: 100;\r\n  font-size: 4vh;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  font-size: 3vh;\r\n`;\r\n\r\nexport const ImageLeft = styled.img`\r\n  position: relative;\r\n  width: 45vh;\r\n  margin: 10vh 0 0 40vh;\r\n  -webkit-mask-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 1)), to(rgba(0, 0, 0, 0.1)));\r\n  opacity: 1;\r\n`;\r\n\r\nexport const ImageRight = styled.img`\r\n  position: relative;\r\n  width: 60vh;\r\n  margin: 0vh 70vh 0 0;\r\n  border-radius: 2vh;\r\n  border: 1px solid white;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100vh;\r\n`;\r\n\r\nexport const TextRight = styled.div`\r\n  width: 95vh;\r\n  margin-left: 100vh;\r\n`;\r\n\r\nexport const TextLeft = styled.div`\r\n  width: 90vh;\r\n  margin-right: 80vh;\r\n`;\r\n\r\nexport const Square = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2vh;\r\n  height: 2vh;\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  border: 1px solid #fff;\r\n  border-radius: 5px;\r\n  margin: 0 5px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Avatar = styled.div<{ image: any }>`\r\n  width: 7vh;\r\n  height: 7vh;\r\n  border-radius: 100vh;\r\n  background-image: url(${(props) => props.image});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  margin-right: 3.5vh;\r\n  border: 2px solid white;\r\n  transition: border 0.2s;\r\n`;\r\n\r\nexport const ListItemWrapper = styled.div`\r\n  width: 100%;\r\n  cursor: pointer;\r\n  background-color: #5733a8;\r\n  overflow: hidden;\r\n  border: 2px solid white;\r\n  transition: border 0.2s;\r\n  &:hover {\r\n    border: 2px solid rgb(80, 20, 110);\r\n    ${Avatar} {\r\n      border-color: rgb(80, 20, 110);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListItemContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 1.1vh;\r\n`;\r\n\r\nexport const DescriptionItem = styled.p`\r\n  width: 35vh;\r\n  font-size: 1.5vh;\r\n  line-height: 0.7vh;\r\n  color: white;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n","import { Flipped } from 'react-flip-toolkit';\r\nimport { IListItemProps } from './type';\r\nimport * as S from './ListItem.styles';\r\n\r\nexport const ListItem = ({ index, onClick, image, text }: IListItemProps) => {\r\n  const createCardFlipId = (index: any) => `listItem-${index}`;\r\n\r\n  const shouldFlip = (index: any) => (prev: any, current: any) => index === prev || index === current;\r\n\r\n  return (\r\n    <Flipped flipId={createCardFlipId(index)} stagger=\"card\" shouldInvert={shouldFlip(index)}>\r\n      <S.ListItemWrapper onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <S.ListItemContent>\r\n            <Flipped flipId={`avatar-${index}`} stagger=\"card-content\" shouldFlip={shouldFlip(index)} delayUntil={createCardFlipId(index)}>\r\n              <S.Avatar image={image} />\r\n            </Flipped>\r\n            <S.Description>\r\n              {text.map((item, i) => (\r\n                <Flipped\r\n                  key={i}\r\n                  flipId={`description-${index}-${i}`}\r\n                  stagger=\"card-content\"\r\n                  shouldFlip={shouldFlip(index)}\r\n                  delayUntil={createCardFlipId(index)}\r\n                >\r\n                  <S.DescriptionItem>{item}</S.DescriptionItem>\r\n                </Flipped>\r\n              ))}\r\n            </S.Description>\r\n          </S.ListItemContent>\r\n        </Flipped>\r\n      </S.ListItemWrapper>\r\n    </Flipped>\r\n  );\r\n};\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { Avatar } from '../ListItem/ListItem.styles';\r\n\r\nexport const fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(2vh);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ExpandedListItemWrapper = styled.div`\r\n  cursor: pointer;\r\n  background-color: #5733a8;\r\n  border: 2px solid white;\r\n  width: 100vh;\r\n  max-height: 55vh;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 6px;\r\n    background-color: rgb(80, 20, 110);\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    border-radius: 6px;\r\n    background-color: rgb(157, 78, 251);\r\n  }\r\n`;\r\n\r\nexport const ExpandedListItemContent = styled.div`\r\n  padding: 3vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const AvatarExpanded = styled(Avatar)<{ image: any }>`\r\n  width: 10vh;\r\n  height: 10vh;\r\n  margin-right: 0;\r\n  margin: 2vh;\r\n  background-image: url(${(props) => props.image});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  border: 2px solid white;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const DescriptionItem = styled.div`\r\n  font-size: 3vh;\r\n  line-height: 2vh;\r\n  color: white;\r\n\r\n  & + & {\r\n    margin-top: 1.5vh;\r\n  }\r\n`;\r\n\r\nexport const AdditionalContent = styled.div`\r\n  width: 100%;\r\n  margin-top: 3.5vh;\r\n`;\r\n\r\nexport const AdditionalContentItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  animation: ${fadeIn} 1.5s ease forwards;\r\n  opacity: 0;\r\n  border-radius: 1vh;\r\n  background-color: #7f4efb;\r\n  color: white;\r\n  border: 2px solid white;\r\n  padding: 1vh;\r\n\r\n  &:nth-of-type(2) {\r\n    animation-delay: 0.15s;\r\n  }\r\n\r\n  &:nth-of-type(3) {\r\n    animation-delay: 0.3s;\r\n  }\r\n\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const AdditionalContentTitle = styled.div`\r\n  font-size: 2.2vh;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const AdditionalContentText = styled.div`\r\n  font-size: 2vh;\r\n  line-height: 2.5vh;\r\n`;\r\n\r\nexport const UL = styled.ul`\r\n  font-size: 2vh;\r\n`;\r\n","import { Flipped } from 'react-flip-toolkit';\r\nimport { IExpandedListItemProps } from './type';\r\nimport * as S from './ExpandedListItem.styles';\r\n\r\nexport const ExpandedListItem = ({ index, onClick, image, text, info }: IExpandedListItemProps) => {\r\n  const createCardFlipId = (index: any) => `listItem-${index}`;\r\n\r\n  return (\r\n    <Flipped\r\n      flipId={createCardFlipId(index)}\r\n      stagger=\"card\"\r\n      onStart={(el) => {\r\n        setTimeout(() => {\r\n          el.classList.add('animated-in');\r\n        }, 400);\r\n      }}\r\n    >\r\n      <S.ExpandedListItemWrapper onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <S.ExpandedListItemContent>\r\n            <Flipped flipId={`avatar-${index}`} stagger=\"card-content\" delayUntil={createCardFlipId(index)}>\r\n              <S.AvatarExpanded image={image} />\r\n            </Flipped>\r\n            <S.Description>\r\n              {text.map((item, i) => (\r\n                <Flipped key={i} flipId={`description-${index}-${i}`} stagger=\"card-content\" delayUntil={createCardFlipId(index)}>\r\n                  <S.DescriptionItem>{item}</S.DescriptionItem>\r\n                </Flipped>\r\n              ))}\r\n            </S.Description>\r\n            <S.AdditionalContent>\r\n              {Object.entries(info).map(([key, value]) => (\r\n                <S.AdditionalContentItem key={key}>\r\n                  <S.AdditionalContentTitle>{key.toUpperCase()}</S.AdditionalContentTitle>\r\n                  {Array.isArray(value) ? (\r\n                    <S.UL>\r\n                      {value.map((item, index) => (\r\n                        <li key={index}>{item}</li>\r\n                      ))}\r\n                    </S.UL>\r\n                  ) : (\r\n                    <S.AdditionalContentText>{value}</S.AdditionalContentText>\r\n                  )}\r\n                </S.AdditionalContentItem>\r\n              ))}\r\n            </S.AdditionalContent>\r\n          </S.ExpandedListItemContent>\r\n        </Flipped>\r\n      </S.ExpandedListItemWrapper>\r\n    </Flipped>\r\n  );\r\n};\r\n","import CollaborationImage from '../../../assets/images/collaboration.jpg';\r\nimport BankingImage from '../../../assets/images/banking.jpg';\r\nimport CRMImage from '../../../assets/images/crm.png';\r\nimport DigitalImage from '../../../assets/images/digital.jpg';\r\n\r\ninterface InfoType {\r\n  description: string;\r\n  achievements: string[];\r\n  technologies: string;\r\n}\r\n\r\nexport interface IExperienceProps {\r\n  isExperienceVisible: boolean;\r\n}\r\n\r\nexport interface IExperienceEntity {\r\n  image: string;\r\n  text: string[];\r\n  info: InfoType;\r\n}\r\n\r\nexport const ExperienceData: IExperienceEntity[] = [\r\n  {\r\n    text: ['Automobile Imaging and Management Platform', 'Duration: 08.2023 – till now'],\r\n    image: DigitalImage,\r\n    info: {\r\n      description: `A multi-discipline imaging and production studio based primarily in Los Angeles and London, focusing on design for car manufacturers. The main project goal is to develop a web application that will allow reviewing the digital assets thoroughly and quickly, hence – delivering them to the clients in a clear and efficient way.\r\n \r\n        The current business flow comes with a lot of manual operations such as making notes with circling issues in Adobe Acrobat and sending them out via messengers. Apart from that, the review processes can’t be initiated automatically, imposing redundant communication when administrators have to be intermediaries between the artists and the clients, going back and forth with each iteration of the review and updates. \r\n\r\n        System enhancement will be primarily focused on making it easier to leave comments and spot the mistakes by making clear comparisons of different versions of the design. Besides, system notifications will help to speed up the review process by\r\n        eliminating the time lag in communication.`,\r\n      achievements: [\r\n        'Developed an innovative web interface for visualizing automobiles and using cutting-edge visualization technologies',\r\n        'Created an interface with functionalities for working with 360-degree images and panoramas, as well as the ability to add comments. Integrated a tool for comparing images of different versions using a third-party library to detect differences.',\r\n        'Optimized graphic resource loading: Enhanced website performance by optimizing the loading of images and other graphic elements, reduced page loading times, and improved overall interface responsiveness.',\r\n        'Query optimization by using React Query to enhance data retrieval and management efficiency, including minimizing redundant requests and implementing data caching.',\r\n        'Implemented Zustand state manager: Integrated a tool for managing application states, providing ease of use and efficiency in working with data. This has simplified and enhanced the structure and management of application states, thereby improving its reliability and performance.',\r\n      ],\r\n      technologies: 'TypeScript, React, React Query, React Hook Form, Zustand, Storybook, Axios, sass, MUI, Git',\r\n    },\r\n  },\r\n  {\r\n    text: ['Digital Content Collaboration Platform', 'Duration: 10.2022 – 07.2023'],\r\n    image: CollaborationImage,\r\n    info: {\r\n      description:\r\n        'A platform which makes it easy to attract digital content creators for collaboration. It connects professionals online to create NFTs, sounds, games and gaming items that will bring revenue even after the initial sale. Relations between creators are regulated by smart contracts based on the principle of revenue sharing - Revenue Share Contracts (RSC).',\r\n      achievements: [\r\n        'Developed interface for previewing NFT content: Created an intuitively understandable user interface for viewing and interacting with digital goods and NFTs, with an emphasis on visually appealing content display.',\r\n        'Optimized user interface for various devices: adopted the interface to different devices and screens, ensuring equally comfortable platform usage on both desktop and mobile devices.',\r\n      ],\r\n      technologies: 'TypeScript, React, React Query, React Hook Form, Radix UI, NextJS, Jest, Styled Components, Git',\r\n    },\r\n  },\r\n  {\r\n    text: ['Banking application', 'Duration: 08.2021 – 09.2022'],\r\n    image: BankingImage,\r\n    info: {\r\n      description:\r\n        'Web application for remote banking customer service. The system allows clients to receive information about banking products (loans, deposits, cards), make payments, for example, pay for Internet communications, digital television services, and utilities. On the platform, users can replenish e-wallet accounts, make payments using arbitrary details, transfer money between deposits and bank cards, as well as exchange currency and issue new products.',\r\n      achievements: [\r\n        'Created intuitively understandable and convenient web forms for client interaction with banking services, with a focus on simplicity and security of use.',\r\n        'Developed data processing and validation mechanisms on the client side: Created a system for validating input data and handling errors on the client side of the application, enhancing the reliability and security of data operations.Identifying and addressing performance bottlenecks.',\r\n      ],\r\n      technologies: 'JavaScript, TypeScript, React, Redux Toolkit, React Hook Form, Zod, i18next, Styled Components',\r\n    },\r\n  },\r\n  {\r\n    text: ['HR CRM System ', 'Duration: 01.2021 – 07.2021'],\r\n    image: CRMImage,\r\n    info: {\r\n      description:\r\n        'A company that offers high-performance software products and services in the field of human resource management. The project is the development of a CRM system for HR managers. It allows specialists to communicate with each other, exchange experience, optimize tasks, collaborate with the staff, etc.',\r\n      achievements: [\r\n        'Integrated data visualization tools: Incorporating graphical elements and charts to visualize key metrics and indicators in the human resources management system, facilitating analysis and decision-making for HR specialists.',\r\n        'Implemented components for dynamic data display: Developed reusable user interface components for dynamically displaying data about employees, projects, and tasks, simplifying the development and maintenance of the system.',\r\n      ],\r\n      technologies: 'JavaScript, TypeScript, React, React Hook Form, Jest',\r\n    },\r\n  },\r\n];\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Experience = styled.div`\r\n  margin-left: 50vh;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0;\r\n  margin: 0;\r\n  gap: 1vh;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  width: 100%;\r\n`;\r\n","import { Flipper } from 'react-flip-toolkit';\r\nimport { useEffect, useState } from 'react';\r\nimport { ListItem } from './ListItem/ListItem';\r\nimport { ExpandedListItem } from './ExpandedListItem/ExpandedListItem';\r\nimport { ExperienceData } from './type';\r\nimport * as S from './Experience.styles';\r\nimport { IExperienceProps } from './type';\r\n\r\nexport const Experience = ({ isExperienceVisible }: IExperienceProps) => {\r\n  const [focused, setFocused] = useState<number | null>(null);\r\n\r\n  const handleOpen = (index: number) => {\r\n    setFocused((prev: number | null) => (prev === index ? null : index));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isExperienceVisible) {\r\n      setFocused(null);\r\n    }\r\n  }, [isExperienceVisible]);\r\n\r\n  const listData = ExperienceData;\r\n\r\n  return (\r\n    <S.Experience>\r\n      <Flipper\r\n        flipKey={focused}\r\n        className=\"staggered-list-content\"\r\n        spring=\"gentle\"\r\n        staggerConfig={{\r\n          card: {\r\n            reverse: focused !== null,\r\n          },\r\n        }}\r\n        decisionData={focused}\r\n      >\r\n        <S.List>\r\n          {listData.map((item, index) => (\r\n            <S.Item key={index}>\r\n              {index === focused ? (\r\n                <ExpandedListItem index={focused} onClick={handleOpen} image={item.image} text={item.text} info={item.info} />\r\n              ) : (\r\n                <ListItem index={index} onClick={handleOpen} image={item.image} text={item.text} />\r\n              )}\r\n            </S.Item>\r\n          ))}\r\n        </S.List>\r\n      </Flipper>\r\n    </S.Experience>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { Frame } from './Frame/Frame';\r\nimport { Technologies } from './Technologies/Technologies';\r\nimport 'react-awesome-button/dist/styles.css';\r\nimport * as S from './Gallery.styles';\r\nimport MyPhoto from '../../assets/images/my_photo.png';\r\nimport FrontEnd from '../../assets/images/frontend.gif';\r\nimport projectsIcon from '../../assets/icons/projects.png';\r\nimport contactsIcon from '../../assets/icons/contacts.png';\r\nimport { Experience } from './Experience/Experience';\r\n\r\nconst Gallery = () => {\r\n  const [experienceYears, setExperienceYears] = useState(0);\r\n  const [experienceMonths, setExperienceMonths] = useState(0);\r\n  const [isExperienceVisible, setExperienceVisible] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const handleProjectsOpen = () => {\r\n    navigate('/projects');\r\n  };\r\n\r\n  const handleContactsOpen = () => {\r\n    navigate('/contacts');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startDate = new Date('2021-01-01');\r\n    const currentDate = new Date();\r\n\r\n    let years = currentDate.getFullYear() - startDate.getFullYear();\r\n    let months = currentDate.getMonth() - startDate.getMonth();\r\n\r\n    if (months < 0) {\r\n      years--;\r\n      months += 12;\r\n    }\r\n\r\n    setExperienceYears(years);\r\n    setExperienceMonths(months);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let zSpacing = -1000,\r\n      lastPos = zSpacing / 5,\r\n      $frames = document.getElementsByClassName('frame'),\r\n      frames = Array.from($frames),\r\n      zVals: any[] = [];\r\n\r\n    function handleScroll() {\r\n      let top = document.documentElement.scrollTop,\r\n        delta = lastPos - top;\r\n\r\n      lastPos = top;\r\n\r\n      frames.forEach(function (n, i) {\r\n        zVals.push(i * zSpacing + zSpacing);\r\n        zVals[i] += delta * -5.5;\r\n        let frame = frames[i],\r\n          transform = `translateZ(${zVals[i]}px)`,\r\n          opacity = zVals[i] < Math.abs(zSpacing) / 1.8 ? 1 : 0;\r\n        if (frame instanceof HTMLElement) {\r\n          frame.style.cssText = `transform: ${transform}; opacity: ${opacity};`;\r\n\r\n          if (opacity === 0) {\r\n            frame.style.pointerEvents = 'none';\r\n          } else {\r\n            frame.style.pointerEvents = 'auto';\r\n          }\r\n\r\n          if (frame.classList.contains('experience') && opacity === 1 && zVals[i] > 0) {\r\n            setExperienceVisible(true);\r\n          }\r\n          if (!frame.classList.contains('experience') && opacity === 1 && zVals[i] > 0) {\r\n            setExperienceVisible(false);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    window.scrollTo(0, 1);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Litvinov Mikhail</title>\r\n        <link rel=\"icon\" href=\"ML.ico\" />\r\n      </Helmet>\r\n      <S.Wrapper>\r\n        <S.Container>\r\n          <S.Gallery>\r\n            <Frame>\r\n              <S.H2>\r\n                Hello! <br /> I am <br />\r\n                Mikhail <br />\r\n                Litvinov\r\n              </S.H2>\r\n            </Frame>\r\n            <Frame>\r\n              <S.ImageLeft src={MyPhoto} />\r\n            </Frame>\r\n            <Frame>\r\n              <S.ImageRight src={FrontEnd} />\r\n            </Frame>\r\n            <Frame>\r\n              <S.TextRight>\r\n                <S.H3>Professional summary</S.H3>\r\n                <S.P>\r\n                  I am a passionate  Front-end developer with <S.Square>{experienceYears}</S.Square> {experienceYears > 1 ? 'years' : 'year'} and{' '}\r\n                  <S.Square>{experienceMonths}</S.Square> {experienceMonths > 1 || experienceMonths === 0 ? 'months' : 'month'} of practical experience in crafting captivating digital interfaces. Proficient in JavaScript and React, I strive to translate ideas into code. From elegant user interfaces to seamless interactions, I blend creativity with technical prowess to create solutions that captivate and inspire. With an unparalleled ability to solve problems and an unquenchable drive for perfection, I am not just a developer - I am a dynamic force needed by your team to turn dreams into reality.\r\n                </S.P>\r\n              </S.TextRight>\r\n            </Frame>\r\n            <Frame>\r\n              <Technologies />\r\n            </Frame>\r\n            <Frame>\r\n              <S.TextLeft>\r\n                <S.H3>Frontend Development Experience</S.H3>\r\n                <S.P>\r\n                  Here are some of the key projects I have worked on as a frontend developer. Each project represents the result of my efforts in\r\n                  creating user interfaces that are both user-friendly and functionally robust, utilizing modern technologies and best practices in\r\n                  frontend development\r\n                </S.P>\r\n              </S.TextLeft>\r\n            </Frame>\r\n            <Frame name=\"experience\">\r\n              <Experience isExperienceVisible={isExperienceVisible} />\r\n            </Frame>\r\n            <Frame>\r\n              <S.Text>\r\n                <S.H3>My Projects and Contacts</S.H3>\r\n                <S.P style={{ textAlign: 'center' }}>\r\n                  Welcome to the section where I showcase my personal projects and contact information! Here, I present ideas I've been working on in\r\n                  my spare time, as well as provide ways to get in touch with me. Each project is a reflection of my passion for frontend development.\r\n                  Click the button below to go to the projects page and learn more about each of them, or head to the contacts page to get in touch\r\n                  with me!\r\n                </S.P>\r\n                <S.ButtonsWrapper>\r\n                  <S.Button onClick={handleProjectsOpen}>\r\n                    <S.ProjectsIcon src={projectsIcon} />\r\n                    Projects\r\n                  </S.Button>\r\n                  <S.Button onClick={handleContactsOpen}>\r\n                    <S.ContactsIcon src={contactsIcon} />\r\n                    Contacts\r\n                  </S.Button>\r\n                </S.ButtonsWrapper>\r\n              </S.Text>\r\n            </Frame>\r\n          </S.Gallery>\r\n        </S.Container>\r\n      </S.Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"names":["Frame","styled","div","_templateObject","_taggedTemplateLiteral","_ref","children","name","combinedClassName","concat","_jsx","S","className","Technologies","Content","_templateObject2","H3","h3","_templateObject3","Header","Label","Text","Icon","img","_templateObject4","Technology","_templateObject5","icon","label","description","_jsxs","src","TechnologiesInformation","CardsWrapper","map","technology","props","direction","speed","Marquee","gradient","pauseOnHover","MarqueeCards","TechnologiesCards","ButtonsWrapper","Button","button","ProjectsIcon","ContactsIcon","Wrapper","Container","_templateObject6","Gallery","section","_templateObject7","H2","h2","_templateObject8","_templateObject9","P","p","_templateObject10","ImageLeft","_templateObject11","ImageRight","_templateObject12","_templateObject13","TextRight","_templateObject14","TextLeft","_templateObject15","Square","_templateObject16","Avatar","image","ListItemWrapper","ListItemContent","DescriptionItem","Description","ListItem","index","onClick","text","createCardFlipId","shouldFlip","prev","current","Flipped","flipId","stagger","shouldInvert","inverseFlipId","delayUntil","item","i","fadeIn","keyframes","ExpandedListItemWrapper","ExpandedListItemContent","AvatarExpanded","AdditionalContent","AdditionalContentItem","AdditionalContentTitle","AdditionalContentText","UL","ul","ExpandedListItem","info","onStart","el","setTimeout","classList","add","Object","entries","_ref2","_ref3","_slicedToArray","key","value","toUpperCase","Array","isArray","ExperienceData","achievements","technologies","CollaborationImage","BankingImage","CRMImage","Experience","List","Item","li","isExperienceVisible","_useState","useState","_useState2","focused","setFocused","handleOpen","useEffect","listData","Flipper","flipKey","spring","staggerConfig","card","reverse","decisionData","experienceYears","setExperienceYears","_useState3","_useState4","experienceMonths","setExperienceMonths","_useState5","_useState6","setExperienceVisible","navigate","useNavigate","startDate","Date","currentDate","years","getFullYear","months","getMonth","zSpacing","lastPos","$frames","document","getElementsByClassName","frames","from","zVals","handleScroll","top","documentElement","scrollTop","delta","forEach","n","push","frame","transform","opacity","Math","abs","HTMLElement","style","cssText","pointerEvents","contains","window","addEventListener","scrollTo","removeEventListener","_Fragment","Helmet","rel","href","MyPhoto","FrontEnd","textAlign","projectsIcon","contactsIcon"],"sourceRoot":""}