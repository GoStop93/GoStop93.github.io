{"version":3,"file":"static/js/928.ef92a394.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.25\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.25 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps, this);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.25\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["isAnimatable","value","name","Array","isArray","complex","test","startsWith","BaseAnimation","_ref","_ref$autoplay","autoplay","_ref$delay","delay","_ref$type","type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","options","_objectWithoutProperties","_excluded","_classCallCheck","this","isStopped","hasAttemptedResolve","_objectSpread","updateFinishedPromise","_createClass","key","get","_resolved","flushKeyframeResolvers","keyframes","finalKeyframe","_this$options","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","length","isOriginAnimatable","isTargetAnimatable","warning","concat","current","i","hasKeyframesChanged","canAnimate","instantAnimationState","getFinalKeyframe","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","_this","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","Math","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","undefined","spring","resolveSpring","restDelta","restSpeed","origin","target","state","done","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","_definition","_slicedToArray","defaultOffset","arr","offset","remaining","offsetProgress","progress","push","mixNumber","fillOffset","values","easing","keyframeValues","times","_ref$ease","ease","easingFunctions","isEasingArray","map","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","_BaseAnimation","_inherits","_super","_createSuper","_ref$KeyframeResolver","KeyframeResolver","KeyframeResolver$1","call","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","motionValue","onResolved","resolvedKeyframes","onKeyframesResolved","owner","resolver","resolveKeyframes","scheduleResolve","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","pipe","mix","generator","_toConsumableArray","reverse","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","arguments","resolved","_this$options3","speed","round","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","Boolean","isAnimationFinished","finish","set","newTime","driver","newSpeed","hasChanged","_this2","isScheduled","resume","_this$options4","_this$options4$driver","onPlay","tick","_a","cancel","teardown","onStop","stopDriver","animateValue","isNotNull","filter","index","acos","clearTime","MotionGlobalConfig","useManualTiming","performance","queueMicrotask","MotionContext","createContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","_createRenderBatcher","createRenderBatcher","microtask","schedule","isRefObject","ref","Object","prototype","hasOwnProperty","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","animate","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","MotionConfigContext","layoutId","useLayoutId","isStatic","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","reducedMotion","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","isForcedMotionValue","transformProps","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","transform","int","number","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","Set","isValidMotionProp","isValidProp","shouldForward","require","calcOrigin","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","currentValues","isKeyframesTarget","isCustomValue","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","apply","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","getVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","getValueTransition","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","_parseCSSVariable","match","exec","_match","token1","token2","fallback","parseCSSVariable","_parseCSSVariable2","token","getComputedStyle","getPropertyValue","trimmed","parseFloat","isCSSVariableToken","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","maxDefaults","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","floatRegex","unit","defaultValue","functionRegex","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","_KeyframeResolver","unresolvedKeyframes","_get","_getPrototypeOf","keyframe","positionalKeys","resolveNoneKeyframes","_unresolvedKeyframes","originType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","_step","_iterator","_createForOfIteratorHelper","s","n","err","makeNoneKeyframesAnimatable","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","_this$options2$durati","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","_defineProperty","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","animateMotionValue","isHandoff","valueTransition","_transition$elapsed","when","delayChildren","staggerChildren","staggerDirection","from","isTransitionDefined","shouldSkip","skipAnimations","supports","isWillChangeMotionValue","add","setMotionValue","hasValue","addValue","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","_ref$transitionEnd","setTarget","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","transformPagePoint","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetSkewAndRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasDistortingTransform","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","hasAnimated","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","measureInitialState","measureEndState","scrollTo","complete","readAllKeyframes","readKeyframes","isAsync","isComplete","currentValue","valueAsRead","readValue","item","input","_ref$clamp","isClamp","mixer","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","analyseComplexValue","targetStats","indexes","var","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","_v$match2","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","_analyseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith"],"sourceRoot":""}